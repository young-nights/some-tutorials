# RT-Thread building script for component

Import('rtconfig')
from building import *

cwd = GetCurrentDir()
src = Split('''
NXP/LPC43xx/Source/Templates/system_LPC43xx.c
''')
CPPPATH = [cwd + '/NXP/LPC43xx/Include', cwd + '/../CMSIS/Include']
CPPDEFINES = [rtconfig.USE_CORE]
CPPDEFINES += ['USE_SPIFI']
# add for startup script
if rtconfig.USE_CORE =='CORE_M4':
    if rtconfig.PLATFORM in ['gcc']:
        src += ['NXP/LPC43xx/Source/Templates/GCC/startup_LPC43xx.s']
    elif rtconfig.PLATFORM in ['armcc', 'armclang']:
        src += ['NXP/LPC43xx/Source/Templates/ARM/startup_LPC43xx.s']
    elif rtconfig.PLATFORM in ['iccarm']:
        src += ['NXP/LPC43xx/Source/Templates/IAR/startup_LPC43xx.s']
else:
    if rtconfig.PLATFORM in ['gcc']:
        src += ['NXP/LPC43xx/Source/Templates/GCC/startup_LPC43xx_M0.s']
    elif rtconfig.PLATFORM in ['armcc', 'armclang']:
        src += ['NXP/LPC43xx/Source/Templates/ARM/startup_LPC43xx_M0.s']
    elif rtconfig.PLATFORM in ['iccarm']:
        src += ['NXP/LPC43xx/Source/Templates/IAR/startup_LPC43xx_M0.s']
group = DefineGroup('CMSIS', src, depend = [''], CPPPATH = CPPPATH, CPPDEFINES = CPPDEFINES)

Return('group')
