# RT-Thread building script for component

from building import *

cwd     = GetCurrentDir()
src     = []

CPPPATH = [cwd]
CPPDEFINES = []
LOCAL_CFLAGS = ' -DARCH_RISCV'

if GetDepend('BL808_CORE_M0'):
    src += Split("""
        std/startup/m0/start.S
        std/startup/m0/vector.S
        std/startup/m0/riscv_fpu.S
        std/startup/m0/start_load.c
        std/startup/m0/system_bl808.c
        std/startup/m0/interrupt.c
    """)
    CPPDEFINES += ['CPU_M0']

elif GetDepend('BL808_CORE_LP'):
    src += Split("""
        std/startup/lp/start.S
        std/startup/lp/vector.S
        std/startup/lp/riscv_fpu.S
        std/startup/lp/start_load.c
        std/startup/lp/system_bl808.c
        std/startup/lp/interrupt.c
    """)
    CPPDEFINES += ['CPU_LP']
    
elif GetDepend('BL808_CORE_D0'):
    CPPDEFINES += ['CPU_D0']
    if GetDepend('RT_USING_SMART'):
        LOCAL_CFLAGS += ' -DRT_USING_SMART'

if GetDepend('BL808_CORE_M0') or GetDepend('BL808_CORE_LP'):
    src += Split("""
        std/src/bl808_aon.c
        std/src/bl808_clock.c
        std/src/bl808_common.c
        std/src/bl808_ef_cfg.c
        std/src/bl808_glb.c
        std/src/bl808_glb_gpio.c
        std/src/bl808_hbn.c
        std/src/bl808_l1c.c
        std/src/bl808_pds.c
        std/src/bl808_sdh.c
        std/src/bl808_tzc_sec.c
        std/src/bl808_psram_uhs.c
        std/src/bl808_uhs_phy.c
        std/port/bl808_clock.c
    """)
elif GetDepend('BL808_CORE_D0'):
    src += Split("""
        std/src/bl808_clock.c
        std/src/bl808_hbn.c
        std/port/bl808_clock.c
    """)

CPPPATH += [cwd + r'/std/include',
        cwd + r'/std/include/hardware']

CPPDEFINES += ['CONFIG_IRQ_NUM=80', 'BFLB_USE_HAL_DRIVER', 'BL808', 'default_interrupt_handler=SW_handler']

group = DefineGroup('bl808', src, depend = ['BSP_USING_BL808'], CPPPATH = CPPPATH, CPPDEFINES = CPPDEFINES, LOCAL_CFLAGS = LOCAL_CFLAGS)

Return('group')
